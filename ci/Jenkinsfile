@Library('jenkins_shared_lib') _

pipeline {
    agent any
    options {
        disableConcurrentBuilds(abortPrevious: true)
    }
    environment {
        HOME = "${WORKSPACE}"
        BUILD_CC = 'gcc'
        GH_TOKEN = credentials('gputester-github-token')
        BUILD_TYPE = sh(returnStdout: true, script: 'rapids-build-type')
    }
    stages {
        stage('Checks') {
            failFast true
            parallel {
                stage('Check') {
                    options {
                        timeout(time: 1, unit: 'HOURS')
                    }
                    agent {
                        docker {
                            image 'gpuci/rapidsai-driver:21.10-cuda11.4-devel-ubuntu20.04-py3.8'
                            label 'cpu'
                        }
                    }
                    steps {
                        cleanWs(
                            deleteDirs: true,
                            externalDelete: 'sudo rm -rf %s'
                        )
                        checkout scm
                        sh "${WORKSPACE}/ci/scripts/jenkins/checks.sh"
                    }
                }
            }
        }
        stage('Builds') {
            failFast true
            parallel {
                stage('Build:linux:x86_64:gcc') {
                    options {
                        timeout(time: 1, unit: 'HOURS')
                    }
                    environment {
                        PARALLEL_LEVEL = '10'
                        USE_SCCACHE = '1'
                        HOME = "${WORKSPACE}"
                    }
                    agent {
                        docker {
                            image 'gpuci/rapidsai:21.10-cuda11.4-devel-ubuntu20.04-py3.8'
                            label 'driver-495'
                            args '--runtime "nvidia" -e "NVIDIA_VISIBLE_DEVICES=$EXECUTOR_NUMBER"'
                        }
                    }
                    steps {
                        cleanWs(
                            deleteDirs: true,
                            externalDelete: 'sudo rm -rf %s'
                        )
                        checkout scm
                        withCredentials([[
                            $class: 'AmazonWebServicesCredentialsBinding',
                            credentialsId: "aws-s3-gpuci",
                            accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                            secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                        ]])
                        {
                            sh "${WORKSPACE}/ci/scripts/jenkins/build.sh"
                        }
                    }
                }
                stage('Build:linux:x86_64:clang') {
                    options {
                        timeout(time: 1, unit: 'HOURS')
                    }
                    environment {
                        PARALLEL_LEVEL = '10'
                        USE_SCCACHE = '1'
                        BUILD_CC = 'clang'
                        HOME = "${WORKSPACE}"
                    }
                    agent {
                        docker {
                            image 'gpuci/rapidsai:21.10-cuda11.4-devel-ubuntu20.04-py3.8'
                            label 'driver-495'
                            args '--runtime "nvidia" -e "NVIDIA_VISIBLE_DEVICES=$EXECUTOR_NUMBER"'
                        }
                    }
                    steps {
                        cleanWs(
                            deleteDirs: true,
                            externalDelete: 'sudo rm -rf %s'
                        )
                        checkout scm
                        withCredentials([[
                            $class: 'AmazonWebServicesCredentialsBinding',
                            credentialsId: "aws-s3-gpuci",
                            accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                            secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                        ]])
                        {
                            sh "${WORKSPACE}/ci/scripts/jenkins/build.sh"
                        }
                    }
                }
                stage('Build:Documentation') {
                    options {
                        timeout(time: 1, unit: 'HOURS')
                    }
                    agent {
                        docker {
                            image 'gpuci/rapidsai:21.10-cuda11.4-devel-ubuntu20.04-py3.8'
                            label 'driver-495'
                            args '--runtime "nvidia" -e "NVIDIA_VISIBLE_DEVICES=$EXECUTOR_NUMBER"'
                        }
                    }
                    environment {
                        HOME = "${WORKSPACE}"
                    }
                    steps {
                        cleanWs(
                            deleteDirs: true,
                            externalDelete: 'sudo rm -rf %s'
                        )
                        checkout scm
                        withCredentials([[
                            $class: 'AmazonWebServicesCredentialsBinding',
                            credentialsId: "aws-s3-gpuci",
                            accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                            secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                        ]])
                        {
                            sh "${WORKSPACE}/ci/scripts/jenkins/docs.sh"
                        }
                    }
                }

            }
        }
        stage('Post Build Stages') {
            failFast true
            parallel {
                stage('Test') {
                    options {
                        timeout(time: 1, unit: 'HOURS')
                    }
                    agent {
                        docker {
                            image 'gpuci/rapidsai:21.10-cuda11.4-devel-ubuntu20.04-py3.8'
                            label 'driver-495'
                            args '--runtime "nvidia" -e "NVIDIA_VISIBLE_DEVICES=$EXECUTOR_NUMBER"'
                        }
                    }
                    environment {
                        HOME = "${WORKSPACE}"
                    }
                    steps {
                        cleanWs(
                            deleteDirs: true,
                            externalDelete: 'sudo rm -rf %s'
                        )
                        checkout scm
                        withCredentials([[
                            $class: 'AmazonWebServicesCredentialsBinding',
                            credentialsId: "aws-s3-gpuci",
                            accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                            secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                        ]])
                        {
                            sh "${WORKSPACE}/ci/scripts/jenkins/test.sh"
                        }
                    }
                }
            }
        }
    }
    post {
        always {
                cleanWs(
                    deleteDirs: true,
                    externalDelete: 'sudo rm -rf %s'
                )
        }
    }
}
