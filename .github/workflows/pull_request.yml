# SPDX-FileCopyrightText: Copyright (c) 2022, NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build pull request

on:
  push:
    branches:
      - 'pull-request/**'
      - "branch-*"

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

env:
  AWS_DEFAULT_REGION: us-west-2
  AWS_ACCESS_KEY_ID: "${{ secrets.GHA_AWS_ACCESS_KEY_ID }}"
  AWS_SECRET_ACCESS_KEY: "${{ secrets.GHA_AWS_SECRET_ACCESS_KEY }}"
  BUILD_CC: "gcc"
  CHANGE_TARGET: "${{ github.base_ref }}"
  GH_TOKEN: "${{ github.token }}"
  GIT_COMMIT: "${{ github.sha }}"
  SRF_ROOT: "${{ github.workspace }}/srf"
  WORKSPACE: "${{ github.workspace }}/srf"
  WORKSPACE_TMP: "${{ github.workspace }}/tmp"


  test:
    name: Test
    runs-on: [self-hosted, linux, amd64, gpu-v100-495-1]
    timeout-minutes: 60
    container:
      image: rapidsai/ci:cuda11.4.1-ubuntu20.04=py3.8
      options: --cap-add=sys_nice
      env:
        NVIDIA_VISIBLE_DEVICES: ${{ env.NVIDIA_VISIBLE_DEVICES }}
        PARALLEL_LEVEL: '10'
    strategy:
      fail-fast: true
      matrix:
        build_cc: ["gcc", "gcc-coverage"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: false
          path: 'srf'

      - name: Test:linux:x86_64
        shell: bash
        env:
          BUILD_CC: ${{ matrix.build_cc }}
        run: ./srf/ci/scripts/github/test.sh

